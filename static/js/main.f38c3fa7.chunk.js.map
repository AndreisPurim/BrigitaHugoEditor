{"version":3,"sources":["index.js"],"names":["getComplementaryColor","colorPart","arguments","length","undefined","slice","ind","parseInt","iter","toString","Main","_React$useState","React","useState","_React$useState2","Object","_home_andreis_Desktop_Documents_Github_Personal_Brigita_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","token","setToken","_React$useState3","useMediaQuery","_React$useState4","lightMode","setLightMode","_React$useState5","_React$useState6","color","setColor","_React$useState7","_React$useState8","show","setShow","_React$useState9","_React$useState10","login","setLogin","theme","useMemo","createTheme","palette","primary","main","secondary","mode","typography","fontFamily","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_mui_material_styles__WEBPACK_IMPORTED_MODULE_13__","_devil7softwares_react_drifter_stars__WEBPACK_IMPORTED_MODULE_6__","style","zIndex","backgroundColor","background","display","position","inset","_mui_material_Grid__WEBPACK_IMPORTED_MODULE_8__","container","direction","justifyContent","alignItems","item","_mui_material_Typography__WEBPACK_IMPORTED_MODULE_11__","variant","filter","_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_14__","title","_mui_material_Link__WEBPACK_IMPORTED_MODULE_16__","href","target","rel","sx","textDecorationStyle","_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_15__","onClick","Math","random","_mui_icons_material_ColorLens__WEBPACK_IMPORTED_MODULE_18___default","_mui_icons_material_DarkMode__WEBPACK_IMPORTED_MODULE_19___default","ReposPage","_mui_material_Card__WEBPACK_IMPORTED_MODULE_7__","elevation","maxWidth","_mui_material_CardContent__WEBPACK_IMPORTED_MODULE_9__","gutterBottom","component","_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_23__","marginTop","fullWidth","_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_21__","_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_17__","type","value","onChange","e","endAdornment","_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_22__","alert","edge","_mui_icons_material_ContentCopy__WEBPACK_IMPORTED_MODULE_26___default","_mui_icons_material_VisibilityOff__WEBPACK_IMPORTED_MODULE_25___default","_mui_icons_material_Visibility__WEBPACK_IMPORTED_MODULE_24___default","label","_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__","event","preventDefault","_ref","_React$useState11","_React$useState12","repos","setRepos","octokit","Octokit","auth","userAgent","useEffect","_onLoad","_home_andreis_Desktop_Documents_Github_Personal_Brigita_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_andreis_Desktop_Documents_Github_Personal_Brigita_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","request","then","res","data","catch","err","console","log","stop","apply","this","onLoad","map","key","id","name","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f38c3fa7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Octokit } from \"@octokit/rest\";\nimport DrifterStars from '@devil7softwares/react-drifter-stars'\n\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Grid from '@mui/material/Grid';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { ThemeProvider, useTheme, createTheme } from \"@mui/material/styles\";\n\nimport Tooltip from '@mui/material/Tooltip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport Link from '@mui/material/Link';\n\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport TextField from '@mui/material/TextField';\n\n\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nconst getComplementaryColor = (color = '') => {\n  const colorPart = color.slice(1);\n  const ind = parseInt(colorPart, 16);\n  let iter = ((1 << 4 * colorPart.length) - 1 - ind).toString(16);\n  while (iter.length < colorPart.length) {\n     iter = '0' + iter;\n  };\n  return '#' + iter;\n};\n\nfunction Main(){\n  const [token, setToken] = React.useState(\"\");\n  const [lightMode, setLightMode] = React.useState(useMediaQuery('(prefers-color-scheme: dark)')?'dark':'light');\n  const [color, setColor] = React.useState('#f44336');\n  const [show, setShow] = React.useState(false);\n  const [login, setLogin] = React.useState(\"\");\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: { main: color },\n          secondary: { main: getComplementaryColor(color) },\n          mode: lightMode,\n        },\n        typography: {\n          fontFamily: 'sans-serif'\n        }\n      }),\n    [color, lightMode],\n  );\n  const randomizeColor = () => {\n    setColor('#'+(Math.random()*0xFFFFFF<<0).toString(16));\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setLogin(token);\n  }\n  const changeTheme=()=>{\n    if(lightMode==='light')\n      setLightMode('dark')\n    else\n      setLightMode('light')\n  }\n  return(\n    <ThemeProvider theme={theme}>\n      <DrifterStars style={{zIndex: \"-1\", backgroundColor: \"#31102f\", background: \"linear-gradient(-45deg,\" + theme.palette.primary.main + \",\"+ theme.palette.secondary.main + \")\",\ndisplay: \"block\", position: \"fixed\", inset: \"0\"}}/>\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\n        <Grid item color=\"white\">\n          <Typography variant=\"h3\"><b> [ BRI<span style={{ color: theme.palette.primary.main, filter: \"brightness(1.5)\"}}>GIT</span>A ] </b></Typography>\n        </Grid>\n        <Grid item color=\"white\">\n          <Typography> A simple <Tooltip title=\"Brigita is a 100% free and 100% frontend solution, that is, we don't (and can't) store anything in any server!\"><Link href=\"https://en.wikipedia.org/wiki/Static_web_page\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>static</Link></Tooltip> <Tooltip title=\"Content Management System: A software that enables users to create and edit websites easily\"><Link href=\"https://en.wikipedia.org/wiki/Content_management_system\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>CMS</Link></Tooltip> for <Tooltip title=\"SSG: Static Site Generator, that is, a program that generates static web pages (thus, don't necessarily rely on a dinamic server to deliver it to their users)\"><Link href=\"https://en.wikipedia.org/wiki/Web_template_system#Static_site_generators\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>SSG</Link></Tooltip> <Tooltip title=\"Pages stored in Github!\"><Link href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>gh-pages</Link></Tooltip></Typography>\n        </Grid>\n        <Grid item color=\"white\">\n          <Tooltip title=\"Randomize my colors\">\n            <IconButton onClick={randomizeColor}>\n              <ColorLensIcon style={{color:\"white\"}}/>\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Dark Mode\">\n            <IconButton onClick={changeTheme}>\n              <DarkModeIcon style={{color:\"white\"}}/>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      {login?\n        <ReposPage login={login}/>\n      :\n        <Grid item >\n          <Card elevation={24} sx={{maxWidth: 600}}>\n            <CardContent>\n              <Typography color=\"text.secondary\" gutterBottom>\n                Welcome to Brigita!\n              </Typography>\n              <Typography variant=\"h5\" component=\"div\">\n                  Paste your github Personal Access Token below!\n              </Typography>\n              <Typography color=\"text.secondary\" gutterBottom>\n                We use the P.A.T. to connect to your github files! The P.A.T will be stored encripted in the cookies of your browser for easier access!\n              </Typography>\n              <FormControl style={{marginTop:'1rem'}} fullWidth variant=\"outlined\">\n                <InputLabel>Personal Access Token</InputLabel>\n                <OutlinedInput\n                  type={show ? 'text' : 'password'}\n                  value={token}\n                  onChange={(e) => setToken(e.target.value)}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton onClick={() => alert(\"To be implemented, sorry :(\")} edge=\"end\">\n                        <ContentCopyIcon />\n                      </IconButton>\n                      <IconButton onClick={()=>setShow(!show)} edge=\"end\">\n                        {show ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Personal Access Token\"\n                />\n              </FormControl>\n              <Button style={{marginTop:'1rem'}} onClick={handleSubmit} variant=\"contained\">Go!</Button>\n            </CardContent>\n          </Card>\n        </Grid>\n      }\n        <Grid item color=\"white\">\n          <Typography variant=\"overline\">Created by <Link href=\"https://github.com/AndreisPurim\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>Andreis Purim</Link> (<Link href=\"https://github.com/AndreisPurim/Brigita\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>Source</Link>)</Typography>\n        </Grid>\n      </Grid>\n      </ThemeProvider>\n  )\n}\n\nfunction ReposPage({ login }){\n  const [repos, setRepos] = React.useState([]);\n  const octokit = new Octokit({     \n    auth: login,    \n    userAgent: 'skylight v1' \n  });\n  \n  React.useEffect(() => {\n    async function onLoad() {\n      await octokit.request('GET /user/repos', {})\n      .then(res => setRepos(res.data))\n      .catch(err => console.log(err))\n    }\n    onLoad();\n  },[])\n  return(\n    <div>\n      hey\n      <ul>\n        {repos.map(item => <li key={item.id}>{item.name}</li>)}\n      </ul>\n\n    </div>)\n}\n\nReactDOM.createRoot(document.getElementById('root')).render(<Main />);\n"],"sourceRoot":""}