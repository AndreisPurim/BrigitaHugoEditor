{"version":3,"sources":["index.js"],"names":["getComplementaryColor","colorPart","arguments","length","undefined","slice","ind","parseInt","iter","toString","LoadingIndicator","props","usePromiseTracker","promiseInProgress","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","react_spinners_HashLoader__WEBPACK_IMPORTED_MODULE_31___default","color","Main","_React$useState","React","useState","process","_React$useState2","Object","_home_andreis_Desktop_Documents_Github_Personal_Brigita_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","token","setToken","_React$useState3","useMediaQuery","_React$useState4","lightMode","setLightMode","_React$useState5","_React$useState6","setColor","_React$useState7","_React$useState8","show","setShow","_React$useState9","_React$useState10","login","setLogin","theme","useMemo","createTheme","palette","primary","main","secondary","mode","typography","fontFamily","_mui_material_styles__WEBPACK_IMPORTED_MODULE_13__","_devil7softwares_react_drifter_stars__WEBPACK_IMPORTED_MODULE_6__","style","zIndex","backgroundColor","background","light","dark","display","position","inset","_mui_material_Grid__WEBPACK_IMPORTED_MODULE_8__","container","direction","justifyContent","alignItems","backdropFilter","item","_mui_material_Typography__WEBPACK_IMPORTED_MODULE_11__","variant","filter","_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_14__","title","_mui_material_Link__WEBPACK_IMPORTED_MODULE_16__","href","target","rel","sx","textDecorationStyle","_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_15__","onClick","Math","random","_mui_icons_material_ColorLens__WEBPACK_IMPORTED_MODULE_18___default","_mui_icons_material_DarkMode__WEBPACK_IMPORTED_MODULE_19___default","_mui_icons_material_Logout__WEBPACK_IMPORTED_MODULE_28___default","ReposPage","_mui_material_Card__WEBPACK_IMPORTED_MODULE_7__","elevation","maxWidth","_mui_material_CardContent__WEBPACK_IMPORTED_MODULE_9__","gutterBottom","component","_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_23__","marginTop","fullWidth","_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_21__","_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_17__","type","value","onChange","e","endAdornment","_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_22__","alert","edge","_mui_icons_material_ContentCopy__WEBPACK_IMPORTED_MODULE_26___default","_mui_icons_material_VisibilityOff__WEBPACK_IMPORTED_MODULE_25___default","_mui_icons_material_Visibility__WEBPACK_IMPORTED_MODULE_24___default","label","_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__","event","preventDefault","_ref","_React$useState11","_React$useState12","repos","setRepos","_React$useState13","_React$useState14","selected","setSelected","octokit","Octokit","auth","userAgent","useEffect","_onLoad","_home_andreis_Desktop_Documents_Github_Personal_Brigita_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_andreis_Desktop_Documents_Github_Personal_Brigita_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","request","then","res","data","catch","err","console","log","stop","apply","this","trackPromise","onLoad","xs","_mui_material_Fade__WEBPACK_IMPORTED_MODULE_29__","in","Boolean","unmountOnExit","_mui_material_Paper__WEBPACK_IMPORTED_MODULE_27__","padding","spacing","textAlign","map","key","id","size","textTransform","name","WebsitePage","repo","_ref2","trees_url","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1edc9cb9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Octokit } from \"@octokit/rest\";\nimport DrifterStars from '@devil7softwares/react-drifter-stars'\n\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Grid from '@mui/material/Grid';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { ThemeProvider, useTheme, createTheme } from \"@mui/material/styles\";\n\nimport Tooltip from '@mui/material/Tooltip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport Link from '@mui/material/Link';\n\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport TextField from '@mui/material/TextField';\n\n\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport Paper from '@mui/material/Paper';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Fade from '@mui/material/Fade';\n\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\n\nimport HashLoader from \"react-spinners/HashLoader\";\n\nconst getComplementaryColor = (color = '') => {\n  const colorPart = color.slice(1);\n  const ind = parseInt(colorPart, 16);\n  let iter = ((1 << 4 * colorPart.length) - 1 - ind).toString(16);\n  while (iter.length < colorPart.length) {\n     iter = '0' + iter;\n  };\n  return '#' + iter;\n};\n\nconst LoadingIndicator = props => {\n  const { promiseInProgress } = usePromiseTracker();\n    return (\n      promiseInProgress && <HashLoader color=\"white\" />\n  );  \n}\n\nfunction Main(){\n  const [token, setToken] = React.useState(process.env.REACT_APP_GH);\n  const [lightMode, setLightMode] = React.useState(useMediaQuery('(prefers-color-scheme: dark)')?'dark':'light');\n  const [color, setColor] = React.useState('#f44336');\n  const [show, setShow] = React.useState(false);\n  const [login, setLogin] = React.useState(\"\");\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: { main: color },\n          secondary: { main: getComplementaryColor(color) },\n          mode: lightMode,\n        },\n        typography: {\n          fontFamily: 'sans-serif'\n        }\n      }),\n    [color, lightMode],\n  );\n  const randomizeColor = () => {\n    setColor('#'+(Math.random()*0xFFFFFF<<0).toString(16));\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setLogin(token);\n  }\n  const changeTheme=()=>{\n    setLightMode(lightMode==='light'?'dark':'light')\n  }\n  return(\n    <ThemeProvider theme={theme}>\n      <DrifterStars style={{zIndex: \"-1\", backgroundColor: \"#31102f\", background: \"linear-gradient(-45deg,\" + (lightMode==='light'?theme.palette.primary.light:theme.palette.primary.dark) + \",\"+ (lightMode==='light'?theme.palette.secondary.light:theme.palette.secondary.dark) + \")\",\ndisplay: \"block\", position: \"fixed\", inset: \"0\"}}/>\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" style={{backdropFilter: \"brightness(1.5)\"}} >\n        <Grid item color=\"white\">\n          <Typography variant=\"h3\"><b> [ BRI<span style={{ color: theme.palette.primary.main, filter: \"brightness(1.5)\"}}>GIT</span>A ] </b></Typography>\n        </Grid>\n        <Grid item color=\"white\">\n          <Typography> A simple <Tooltip title=\"Brigita is a 100% free and 100% frontend solution, that is, we don't (and can't) store anything in any server!\"><Link href=\"https://en.wikipedia.org/wiki/Static_web_page\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>static</Link></Tooltip> <Tooltip title=\"Content Management System: A software that enables users to create and edit websites easily\"><Link href=\"https://en.wikipedia.org/wiki/Content_management_system\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>CMS</Link></Tooltip> for <Tooltip title=\"SSG: Static Site Generator, that is, a program that generates static web pages (thus, don't necessarily rely on a dinamic server to deliver it to their users)\"><Link href=\"https://en.wikipedia.org/wiki/Web_template_system#Static_site_generators\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>SSG</Link></Tooltip> <Tooltip title=\"Pages stored in Github!\"><Link href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>gh-pages</Link></Tooltip></Typography>\n        </Grid>\n        <Grid item color=\"white\">\n          <Tooltip title=\"Randomize my colors\">\n            <IconButton onClick={randomizeColor}>\n              <ColorLensIcon style={{color:\"white\"}}/>\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Dark Mode\">\n            <IconButton onClick={changeTheme}>\n              <DarkModeIcon style={{color:\"white\"}}/>\n            </IconButton>\n          </Tooltip>\n          {login===\"\"?null:\n            <Tooltip title=\"Dark Mode\">\n              <IconButton onClick={()=>setLogin(\"\")}>\n                <LogoutIcon style={{color:\"white\"}}/>\n              </IconButton>\n            </Tooltip>\n          }\n        </Grid>\n        <LoadingIndicator/>\n      {login?\n        <ReposPage login={login} lightMode={lightMode}/>\n      :\n        <Grid item >\n          <Card elevation={24} sx={{maxWidth: 600}}>\n            <CardContent>\n              <Typography color=\"text.secondary\" gutterBottom>\n                Welcome to Brigita!\n              </Typography>\n              <Typography variant=\"h5\" component=\"div\">\n                  Paste your github Personal Access Token below!\n              </Typography>\n              <Typography color=\"text.secondary\" gutterBottom>\n                We use the P.A.T. to connect to your github files! The P.A.T will be stored encripted in the cookies of your browser for easier access!\n              </Typography>\n              <FormControl style={{marginTop:'1rem'}} fullWidth variant=\"outlined\">\n                <InputLabel>Personal Access Token</InputLabel>\n                <OutlinedInput\n                  type={show ? 'text' : 'password'}\n                  value={token}\n                  onChange={(e) => setToken(e.target.value)}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton onClick={() => alert(\"To be implemented, sorry :(\")} edge=\"end\">\n                        <ContentCopyIcon />\n                      </IconButton>\n                      <IconButton onClick={()=>setShow(!show)} edge=\"end\">\n                        {show ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Personal Access Token\"\n                />\n              </FormControl>\n              <Button style={{marginTop:'1rem'}} onClick={handleSubmit} variant=\"contained\">Go!</Button>\n            </CardContent>\n          </Card>\n        </Grid>\n      }\n        <Grid item color=\"white\">\n          <Typography variant=\"overline\">Created by <Link href=\"https://github.com/AndreisPurim\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>Andreis Purim</Link> (<Link href=\"https://github.com/AndreisPurim/Brigita\" target=\"_blank\" rel=\"noopener noreferrer\" color=\"inherit\" sx={{textDecorationStyle: 'dotted'}}>Source</Link>)</Typography>\n        </Grid>\n      </Grid>\n      </ThemeProvider>\n  )\n}\n\nfunction ReposPage({ lightMode, login }){\n  const [repos, setRepos] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n  const octokit = new Octokit({     \n    auth: login,    \n    userAgent: 'Brigita Editor' \n  });\n  React.useEffect(() => {\n    async function onLoad() {\n      await octokit.request('GET /user/repos', {})\n      .then(res => setRepos(res.data))\n      .catch(err => console.log(err))\n    }\n    trackPromise(onLoad());\n  },[])\n  console.log(repos)\n  return(\n    <Grid item xs={12}>\n      <Fade in={Boolean(repos.length && !selected)} unmountOnExit>\n        <Paper elevation={24} style={{padding:'2rem'}}>\n          <Grid spacing={2} container direction=\"row\" justifyContent=\"center\" alignItems=\"flex-start\">\n            <Grid item xs={12} style={{textAlign:'center'}}><Typography variant=\"h4\">Pick your website repository</Typography></Grid>\n            {repos.map(item =>\n              <Grid item key={item.id} xs={2} >\n                <Button onClick={()=>setSelected(item)} fullWidth size=\"large\" variant={lightMode==='light'?\"contained\":\"outlined\"} style={{textTransform: 'none'}}>{item.name}</Button>      \n              </Grid>\n            )}\n          </Grid>\n        </Paper>\n      </Fade>\n      <WebsitePage lightMode={lightMode} octokit={octokit} repo={selected}/>\n    </Grid>\n  )\n}\n\nfunction WebsitePage({ lightMode, octokit, repo }){\n  if(repo){\n    return(\n      <Grid item xs={12}>\n        <div>{repo.trees_url}</div>\n      </Grid>\n    )\n  }\n  else{ return null; }\n}\n\nReactDOM.createRoot(document.getElementById('root')).render(<Main />);\n"],"sourceRoot":""}